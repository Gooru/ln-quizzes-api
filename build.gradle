buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE")
        classpath("nu.studer:gradle-jooq-plugin:1.0.5")
        classpath("org.postgresql:postgresql:9.4.1211")
        classpath("gradle.plugin.com.boxfuse.client:flyway-release:4.0.3")
    }
}

apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "spring-boot"
apply plugin: "org.flywaydb.flyway"
apply plugin: "nu.studer.jooq"

jar {
    baseName = "quizzes-api"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

flyway {
    driver = datasourceDriver
    url = datasourceUrl
    user = datasourceUsername
    password = datasourcePassword
    schemas = [datasourceSchema]
    baselineOnMigrate = true
    baselineDescription = true
}

jooq {
    quizzes(sourceSets.main) {
        jdbc {
            driver = datasourceDriver
            url = datasourceUrl
            user = datasourceUsername
            password = datasourcePassword
            schema = datasourceSchema
        }
        generator {
            name = "org.jooq.util.DefaultGenerator"
            strategy {
                name = "org.jooq.util.DefaultGeneratorStrategy"
                // ...
            }
            database {
                name = "org.jooq.util.postgres.PostgresDatabase"
                inputSchema = "public"
                excludes = "public.schema_version"
                // ...
                customTypes {
                    customType {
                        type = "java.lang.String"
                        name = "PostgresJsonbString"
                        converter = "com.quizzes.api.common.model.binding.PostgresJsonbStringBinding"
                    }
                }
                forcedTypes {
                    forcedType {
                        name = "PostgresJsonbString"
                        expression = ".*_data"
                        types = ".*"
                    }
                }
            }
            generate {
                relations = false
                deprecated = false
                records = true
                pojos = true
                generatedAnnotation = false
                // ...
            }
            target {
                packageName = "com.quizzes.api.common.model"
                directory = "src/main/java/"
            }
        }
    }
}

generateQuizzesJooqSchemaSource.onlyIf { project.hasProperty("generateJooq") }


dependencies {
    compile("org.springframework.boot:spring-boot-starter-web:1.4.1.RELEASE") {
        exclude module: "org.springframework.boot:spring-boot-starter-logging"
    }
    compile("org.springframework.boot:spring-boot-starter-log4j2")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-jooq:1.4.1.RELEASE")

    compile("org.springframework:spring-messaging")
    compile("org.springframework:spring-jms")
    compile("org.apache.activemq:activemq-broker")
    compile('com.google.code.gson:gson:2.7')

    // Define JPA Configuration using Hibernate implementation by default
    compile("org.springframework.boot:spring-boot-starter-data-jpa") {
        exclude module: "org.springframework.data:spring-data-jpa"
        exclude module: "org.aspectj:aspectjrt"
    }
    compile("org.springframework.data:spring-data-jpa:1.10.4.RELEASE")

    compile("org.postgresql:postgresql:9.4.1211")

    compile("io.springfox:springfox-swagger2:2.4.0")
    compile("io.springfox:springfox-swagger-ui:2.4.0")

    compile("org.flywaydb:flyway-core:4.0.3")

    testCompile("junit:junit")
    testCompile("org.springframework:spring-test");
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.powermock:powermock-mockito-release-full:1.6.4")
}

configurations {
    compile.exclude group:"ch.qos.logback"
}

task wrapper(type: Wrapper) {
    gradleVersion = "2.14"
}
