/**
 * This class is generated by jOOQ
 */
package com.quizzes.api.common.model.tables.records;

import com.quizzes.api.common.model.tables.Event;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventRecord extends org.jooq.impl.TableRecordImpl<EventRecord> implements org.jooq.Record4<java.util.UUID, java.util.UUID, java.sql.Timestamp, java.lang.Object> {

	private static final long serialVersionUID = 1419793836;

	/**
	 * Setter for <code>public.event.id</code>.
	 */
	public void setId(java.util.UUID value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.event.id</code>.
	 */
	public java.util.UUID getId() {
		return (java.util.UUID) getValue(0);
	}

	/**
	 * Setter for <code>public.event.event_index</code>.
	 */
	public void setEventIndex(java.util.UUID value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.event.event_index</code>.
	 */
	public java.util.UUID getEventIndex() {
		return (java.util.UUID) getValue(1);
	}

	/**
	 * Setter for <code>public.event.created_at</code>.
	 */
	public void setCreatedAt(java.sql.Timestamp value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.event.created_at</code>.
	 */
	public java.sql.Timestamp getCreatedAt() {
		return (java.sql.Timestamp) getValue(2);
	}

	/**
	 * Setter for <code>public.event.event_body</code>.
	 */
	public void setEventBody(java.lang.Object value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.event.event_body</code>.
	 */
	public java.lang.Object getEventBody() {
		return (java.lang.Object) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.util.UUID, java.util.UUID, java.sql.Timestamp, java.lang.Object> fieldsRow() {
		return (org.jooq.Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row4<java.util.UUID, java.util.UUID, java.sql.Timestamp, java.lang.Object> valuesRow() {
		return (org.jooq.Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.util.UUID> field1() {
		return Event.EVENT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.util.UUID> field2() {
		return Event.EVENT.EVENT_INDEX;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field3() {
		return Event.EVENT.CREATED_AT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Object> field4() {
		return Event.EVENT.EVENT_BODY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.UUID value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.UUID value2() {
		return getEventIndex();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value3() {
		return getCreatedAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Object value4() {
		return getEventBody();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value1(java.util.UUID value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value2(java.util.UUID value) {
		setEventIndex(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value3(java.sql.Timestamp value) {
		setCreatedAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord value4(java.lang.Object value) {
		setEventBody(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EventRecord values(java.util.UUID value1, java.util.UUID value2, java.sql.Timestamp value3, java.lang.Object value4) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached EventRecord
	 */
	public EventRecord() {
		super(Event.EVENT);
	}

	/**
	 * Create a detached, initialised EventRecord
	 */
	public EventRecord(java.util.UUID id, java.util.UUID eventIndex, java.sql.Timestamp createdAt, java.lang.Object eventBody) {
		super(Event.EVENT);

		setValue(0, id);
		setValue(1, eventIndex);
		setValue(2, createdAt);
		setValue(3, eventBody);
	}
}
