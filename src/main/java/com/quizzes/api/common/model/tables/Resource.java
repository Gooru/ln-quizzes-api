/**
 * This class is generated by jOOQ
 */
package com.quizzes.api.common.model.tables;

import com.quizzes.api.common.model.Public;
import com.quizzes.api.common.model.StringJSONBinding;
import com.quizzes.api.common.model.enums.Lms;
import com.quizzes.api.common.model.tables.records.ResourceRecord;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Resource extends org.jooq.impl.TableImpl<ResourceRecord> {

	private static final long serialVersionUID = 1689069539;

	/**
	 * The singleton instance of <code>public.resource</code>
	 */
	public static final Resource RESOURCE = new Resource();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<ResourceRecord> getRecordType() {
		return ResourceRecord.class;
	}

	/**
	 * The column <code>public.resource.id</code>.
	 */
	public final org.jooq.TableField<ResourceRecord, java.util.UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>public.resource.external_id</code>.
	 */
	public final org.jooq.TableField<ResourceRecord, java.lang.String> EXTERNAL_ID = createField("external_id", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * The column <code>public.resource.lms_id</code>.
	 */
	public final org.jooq.TableField<ResourceRecord, Lms> LMS_ID = createField("lms_id", org.jooq.util.postgres.PostgresDataType.VARCHAR.asEnumDataType(Lms.class), this, "");

	/**
	 * The column <code>public.resource.collection_id</code>.
	 */
	public final org.jooq.TableField<ResourceRecord, java.util.UUID> COLLECTION_ID = createField("collection_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>public.resource.is_resource</code>.
	 */
	public final org.jooq.TableField<ResourceRecord, java.lang.Boolean> IS_RESOURCE = createField("is_resource", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.resource.owner_profile_id</code>.
	 */
	public final org.jooq.TableField<ResourceRecord, java.util.UUID> OWNER_PROFILE_ID = createField("owner_profile_id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>public.resource.resource_data</code>.
	 */
	public final org.jooq.TableField<ResourceRecord, java.lang.String> RESOURCE_DATA = createField("resource_data", org.jooq.impl.DefaultDataType.getDefaultDataType("jsonb"), this, "", new StringJSONBinding());

	/**
	 * The column <code>public.resource.sequence</code>.
	 */
	public final org.jooq.TableField<ResourceRecord, java.lang.Short> SEQUENCE = createField("sequence", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.resource.is_deleted</code>.
	 */
	public final org.jooq.TableField<ResourceRecord, java.lang.Boolean> IS_DELETED = createField("is_deleted", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.resource.created_at</code>.
	 */
	public final org.jooq.TableField<ResourceRecord, java.sql.Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>public.resource</code> table reference
	 */
	public Resource() {
		this("resource", null);
	}

	/**
	 * Create an aliased <code>public.resource</code> table reference
	 */
	public Resource(java.lang.String alias) {
		this(alias, Resource.RESOURCE);
	}

	private Resource(java.lang.String alias, org.jooq.Table<ResourceRecord> aliased) {
		this(alias, aliased, null);
	}

	private Resource(java.lang.String alias, org.jooq.Table<ResourceRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Resource as(java.lang.String alias) {
		return new Resource(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Resource rename(java.lang.String name) {
		return new Resource(name, null);
	}
}
