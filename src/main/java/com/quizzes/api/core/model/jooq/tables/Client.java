/**
 * This class is generated by jOOQ
 */
package com.quizzes.api.core.model.jooq.tables;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Client extends org.jooq.impl.TableImpl<com.quizzes.api.core.model.jooq.tables.records.ClientRecord> {

	private static final long serialVersionUID = 872089770;

	/**
	 * The singleton instance of <code>public.client</code>
	 */
	public static final com.quizzes.api.core.model.jooq.tables.Client CLIENT = new com.quizzes.api.core.model.jooq.tables.Client();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<com.quizzes.api.core.model.jooq.tables.records.ClientRecord> getRecordType() {
		return com.quizzes.api.core.model.jooq.tables.records.ClientRecord.class;
	}

	/**
	 * The column <code>public.client.id</code>.
	 */
	public final org.jooq.TableField<com.quizzes.api.core.model.jooq.tables.records.ClientRecord, java.util.UUID> ID = createField("id", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>public.client.name</code>.
	 */
	public final org.jooq.TableField<com.quizzes.api.core.model.jooq.tables.records.ClientRecord, java.lang.String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * The column <code>public.client.description</code>.
	 */
	public final org.jooq.TableField<com.quizzes.api.core.model.jooq.tables.records.ClientRecord, java.lang.String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "");

	/**
	 * The column <code>public.client.is_active</code>.
	 */
	public final org.jooq.TableField<com.quizzes.api.core.model.jooq.tables.records.ClientRecord, java.lang.Boolean> IS_ACTIVE = createField("is_active", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.client.api_key</code>.
	 */
	public final org.jooq.TableField<com.quizzes.api.core.model.jooq.tables.records.ClientRecord, java.util.UUID> API_KEY = createField("api_key", org.jooq.impl.SQLDataType.UUID.nullable(false), this, "");

	/**
	 * The column <code>public.client.api_secret</code>.
	 */
	public final org.jooq.TableField<com.quizzes.api.core.model.jooq.tables.records.ClientRecord, byte[]> API_SECRET = createField("api_secret", org.jooq.impl.SQLDataType.BLOB.nullable(false), this, "");

	/**
	 * The column <code>public.client.created_at</code>.
	 */
	public final org.jooq.TableField<com.quizzes.api.core.model.jooq.tables.records.ClientRecord, java.sql.Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>public.client.updated_at</code>.
	 */
	public final org.jooq.TableField<com.quizzes.api.core.model.jooq.tables.records.ClientRecord, java.sql.Timestamp> UPDATED_AT = createField("updated_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>public.client</code> table reference
	 */
	public Client() {
		this("client", null);
	}

	/**
	 * Create an aliased <code>public.client</code> table reference
	 */
	public Client(java.lang.String alias) {
		this(alias, com.quizzes.api.core.model.jooq.tables.Client.CLIENT);
	}

	private Client(java.lang.String alias, org.jooq.Table<com.quizzes.api.core.model.jooq.tables.records.ClientRecord> aliased) {
		this(alias, aliased, null);
	}

	private Client(java.lang.String alias, org.jooq.Table<com.quizzes.api.core.model.jooq.tables.records.ClientRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, com.quizzes.api.core.model.jooq.Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public com.quizzes.api.core.model.jooq.tables.Client as(java.lang.String alias) {
		return new com.quizzes.api.core.model.jooq.tables.Client(alias, this);
	}

	/**
	 * Rename this table
	 */
	public com.quizzes.api.core.model.jooq.tables.Client rename(java.lang.String name) {
		return new com.quizzes.api.core.model.jooq.tables.Client(name, null);
	}
}
