/**
 * This class is generated by jOOQ
 */
package com.quizzes.api.core.model.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ContextRecord extends org.jooq.impl.TableRecordImpl<com.quizzes.api.core.model.jooq.tables.records.ContextRecord> implements org.jooq.Record11<java.util.UUID, java.util.UUID, java.util.UUID, java.util.UUID, java.lang.String, java.lang.Boolean, java.sql.Timestamp, java.sql.Timestamp, java.lang.Boolean, java.sql.Timestamp, java.sql.Timestamp> {

	private static final long serialVersionUID = -528016579;

	/**
	 * Setter for <code>public.context.id</code>.
	 */
	public void setId(java.util.UUID value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.context.id</code>.
	 */
	public java.util.UUID getId() {
		return (java.util.UUID) getValue(0);
	}

	/**
	 * Setter for <code>public.context.collection_id</code>.
	 */
	public void setCollectionId(java.util.UUID value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.context.collection_id</code>.
	 */
	public java.util.UUID getCollectionId() {
		return (java.util.UUID) getValue(1);
	}

	/**
	 * Setter for <code>public.context.profile_id</code>.
	 */
	public void setProfileId(java.util.UUID value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.context.profile_id</code>.
	 */
	public java.util.UUID getProfileId() {
		return (java.util.UUID) getValue(2);
	}

	/**
	 * Setter for <code>public.context.class_id</code>.
	 */
	public void setClassId(java.util.UUID value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.context.class_id</code>.
	 */
	public java.util.UUID getClassId() {
		return (java.util.UUID) getValue(3);
	}

	/**
	 * Setter for <code>public.context.context_data</code>.
	 */
	public void setContextData(java.lang.String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.context.context_data</code>.
	 */
	public java.lang.String getContextData() {
		return (java.lang.String) getValue(4);
	}

	/**
	 * Setter for <code>public.context.is_active</code>.
	 */
	public void setIsActive(java.lang.Boolean value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>public.context.is_active</code>.
	 */
	public java.lang.Boolean getIsActive() {
		return (java.lang.Boolean) getValue(5);
	}

	/**
	 * Setter for <code>public.context.start_date</code>.
	 */
	public void setStartDate(java.sql.Timestamp value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>public.context.start_date</code>.
	 */
	public java.sql.Timestamp getStartDate() {
		return (java.sql.Timestamp) getValue(6);
	}

	/**
	 * Setter for <code>public.context.due_date</code>.
	 */
	public void setDueDate(java.sql.Timestamp value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>public.context.due_date</code>.
	 */
	public java.sql.Timestamp getDueDate() {
		return (java.sql.Timestamp) getValue(7);
	}

	/**
	 * Setter for <code>public.context.is_deleted</code>.
	 */
	public void setIsDeleted(java.lang.Boolean value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>public.context.is_deleted</code>.
	 */
	public java.lang.Boolean getIsDeleted() {
		return (java.lang.Boolean) getValue(8);
	}

	/**
	 * Setter for <code>public.context.created_at</code>.
	 */
	public void setCreatedAt(java.sql.Timestamp value) {
		setValue(9, value);
	}

	/**
	 * Getter for <code>public.context.created_at</code>.
	 */
	public java.sql.Timestamp getCreatedAt() {
		return (java.sql.Timestamp) getValue(9);
	}

	/**
	 * Setter for <code>public.context.updated_at</code>.
	 */
	public void setUpdatedAt(java.sql.Timestamp value) {
		setValue(10, value);
	}

	/**
	 * Getter for <code>public.context.updated_at</code>.
	 */
	public java.sql.Timestamp getUpdatedAt() {
		return (java.sql.Timestamp) getValue(10);
	}

	// -------------------------------------------------------------------------
	// Record11 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row11<java.util.UUID, java.util.UUID, java.util.UUID, java.util.UUID, java.lang.String, java.lang.Boolean, java.sql.Timestamp, java.sql.Timestamp, java.lang.Boolean, java.sql.Timestamp, java.sql.Timestamp> fieldsRow() {
		return (org.jooq.Row11) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row11<java.util.UUID, java.util.UUID, java.util.UUID, java.util.UUID, java.lang.String, java.lang.Boolean, java.sql.Timestamp, java.sql.Timestamp, java.lang.Boolean, java.sql.Timestamp, java.sql.Timestamp> valuesRow() {
		return (org.jooq.Row11) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.util.UUID> field1() {
		return com.quizzes.api.core.model.jooq.tables.Context.CONTEXT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.util.UUID> field2() {
		return com.quizzes.api.core.model.jooq.tables.Context.CONTEXT.COLLECTION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.util.UUID> field3() {
		return com.quizzes.api.core.model.jooq.tables.Context.CONTEXT.PROFILE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.util.UUID> field4() {
		return com.quizzes.api.core.model.jooq.tables.Context.CONTEXT.CLASS_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.String> field5() {
		return com.quizzes.api.core.model.jooq.tables.Context.CONTEXT.CONTEXT_DATA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field6() {
		return com.quizzes.api.core.model.jooq.tables.Context.CONTEXT.IS_ACTIVE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field7() {
		return com.quizzes.api.core.model.jooq.tables.Context.CONTEXT.START_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field8() {
		return com.quizzes.api.core.model.jooq.tables.Context.CONTEXT.DUE_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Boolean> field9() {
		return com.quizzes.api.core.model.jooq.tables.Context.CONTEXT.IS_DELETED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field10() {
		return com.quizzes.api.core.model.jooq.tables.Context.CONTEXT.CREATED_AT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.sql.Timestamp> field11() {
		return com.quizzes.api.core.model.jooq.tables.Context.CONTEXT.UPDATED_AT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.UUID value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.UUID value2() {
		return getCollectionId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.UUID value3() {
		return getProfileId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.UUID value4() {
		return getClassId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.String value5() {
		return getContextData();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value6() {
		return getIsActive();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value7() {
		return getStartDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value8() {
		return getDueDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Boolean value9() {
		return getIsDeleted();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value10() {
		return getCreatedAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.sql.Timestamp value11() {
		return getUpdatedAt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContextRecord value1(java.util.UUID value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContextRecord value2(java.util.UUID value) {
		setCollectionId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContextRecord value3(java.util.UUID value) {
		setProfileId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContextRecord value4(java.util.UUID value) {
		setClassId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContextRecord value5(java.lang.String value) {
		setContextData(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContextRecord value6(java.lang.Boolean value) {
		setIsActive(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContextRecord value7(java.sql.Timestamp value) {
		setStartDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContextRecord value8(java.sql.Timestamp value) {
		setDueDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContextRecord value9(java.lang.Boolean value) {
		setIsDeleted(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContextRecord value10(java.sql.Timestamp value) {
		setCreatedAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContextRecord value11(java.sql.Timestamp value) {
		setUpdatedAt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ContextRecord values(java.util.UUID value1, java.util.UUID value2, java.util.UUID value3, java.util.UUID value4, java.lang.String value5, java.lang.Boolean value6, java.sql.Timestamp value7, java.sql.Timestamp value8, java.lang.Boolean value9, java.sql.Timestamp value10, java.sql.Timestamp value11) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ContextRecord
	 */
	public ContextRecord() {
		super(com.quizzes.api.core.model.jooq.tables.Context.CONTEXT);
	}

	/**
	 * Create a detached, initialised ContextRecord
	 */
	public ContextRecord(java.util.UUID id, java.util.UUID collectionId, java.util.UUID profileId, java.util.UUID classId, java.lang.String contextData, java.lang.Boolean isActive, java.sql.Timestamp startDate, java.sql.Timestamp dueDate, java.lang.Boolean isDeleted, java.sql.Timestamp createdAt, java.sql.Timestamp updatedAt) {
		super(com.quizzes.api.core.model.jooq.tables.Context.CONTEXT);

		setValue(0, id);
		setValue(1, collectionId);
		setValue(2, profileId);
		setValue(3, classId);
		setValue(4, contextData);
		setValue(5, isActive);
		setValue(6, startDate);
		setValue(7, dueDate);
		setValue(8, isDeleted);
		setValue(9, createdAt);
		setValue(10, updatedAt);
	}
}
